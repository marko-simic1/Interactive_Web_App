@model RPPP_WebApp.ViewModels.ProjektiViewModel
@using RPPP_WebApp.Controllers

@{
    ViewData["Title"] = "Projekti";
}


<h1>Projekti</h1>


<div>
    <a asp-action="Create" class="btn btn-primary">Dodaj novi projekt</a>
</div>
<hr />

<pager page-info="@Model.PagingInfo" page-action="Index" page-title="Unesite željenu stranicu"
       class="float-end">
</pager>

<table class="table table-sm table-striped table-hover">
    <thead>
        <tr>
            <th>
                <a asp-route-sort="1" asp-route-page="@Model.PagingInfo.CurrentPage" asp-route-ascending="@(Model.PagingInfo.Sort == 1 ? !Model.PagingInfo.Ascending : true)">
                    Ime projekta
                </a>
            </th>
            <th>
                <a asp-route-sort="2" asp-route-page="@Model.PagingInfo.CurrentPage" asp-route-ascending="@(Model.PagingInfo.Sort == 2 ? !Model.PagingInfo.Ascending : true)">
                    Kratica
                </a>
            </th>
            <th>
                <a asp-route-sort="3" asp-route-page="@Model.PagingInfo.CurrentPage" asp-route-ascending="@(Model.PagingInfo.Sort == 3 ? !Model.PagingInfo.Ascending : true)">
                    Sažetak
                </a>
            </th>
            <th>
                <a asp-route-sort="4" asp-route-page="@Model.PagingInfo.CurrentPage" asp-route-ascending="@(Model.PagingInfo.Sort == 4 ? !Model.PagingInfo.Ascending : true)">
                    Datum početka
                </a>
            </th>
            <th>
                <a asp-route-sort="5" asp-route-page="@Model.PagingInfo.CurrentPage" asp-route-ascending="@(Model.PagingInfo.Sort == 5 ? !Model.PagingInfo.Ascending : true)">
                    Datum završetka
                </a>
            </th>
            <th>
                <a asp-route-sort="6" asp-route-page="@Model.PagingInfo.CurrentPage" asp-route-ascending="@(Model.PagingInfo.Sort == 6 ? !Model.PagingInfo.Ascending : true)">
                    Broj kartice
                </a>
            </th>
            <th>
                <a asp-route-sort="7" asp-route-page="@Model.PagingInfo.CurrentPage" asp-route-ascending="@(Model.PagingInfo.Sort == 7 ? !Model.PagingInfo.Ascending : true)">
                    Ime vrste
                </a>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var proj in Model.Projekti)
        {
            <partial name="Get" model="proj" />
        }
    </tbody>
    @*
    <tbody>
    @foreach (var item in Model.Projekti)
    {
    <tr>
    <td class="text-left">
    <a asp-action="Index2" asp-route-id="@item.IdProjekta" title="Ime">@item.ImeProjekta</a>
    </td>
    <td class="text-left">
    @item.Kratica
    </td>
    <td class="text-left">
    @if (item.Sazetak != null)
    {
    @item.Sazetak
    }
    else
    {
    <span class="text-danger">Nema sazetak</span>
    }
    </td>
    <td class="text-left">
    @if (item.DatumPoc != null)
    {
    @item.DatumPoc
    }
    else
    {
    <span class="text-danger">Nema datum pocetka</span>
    }
    </td>
    <td class="text-left">
    @if (item.DatumZav != null)
    {
    @item.DatumZav
    }
    else
    {
    <span class="text-danger">Nema datum zavrsetka</span>
    }
    </td>
    <td class="text-left">
    @if (item.BrKartice != null)
    {
    @item.BrKartice
    }
    else
    {
    <span class="text-danger">Nema broj kartice</span>
    }
    </td>
    <td class="text-left">
    @if (item.imeVrste != null)
    {
    @item.imeVrste
    }
    else
    {
    <span class="text-danger">Nema ime vrste</span>
    }
    </td>


    <td>
    <a asp-controller="Projekt"  asp-action="Edit"  method="get"
    asp-route-id="@item.IdProjekta"
    asp-route-page="@Model.PagingInfo.CurrentPage"
    asp-route-sort="@Model.PagingInfo.Sort"
    asp-route-ascending="@Model.PagingInfo.Ascending"
    class="btn btn-sm btn-warning" title="Uredi">Uredi</a>
    </td>

    <td>
    <form asp-action="Delete" method="post"
    asp-route-id="@item.IdProjekta"
    asp-route-page="@Model.PagingInfo.CurrentPage"
    asp-route-sort="@Model.PagingInfo.Sort"
    asp-route-ascending="@Model.PagingInfo.Ascending">
    <input type="hidden" name="IdProjekta" value="@item.IdProjekta" />
    <button hx-confirm="Jeste li sigurni da želite obrisati projekt?"
    hx-delete="@Url.Action(nameof(ProjektController.Delete), new { id = item.IdProjekta})"
    type="submit" class="btn btn-sm btn-danger delete" title="Obriši">
    Obriši
    </button>
    </form>
    </td>

    </tr>
    }
    </tbody>
    *@
</table>

<button id="generatePdfButton" class="btn btn-primary">Izvezite PDF</button>
<button id="generateExcelButton" class="btn btn-success">Izvezite Excel</button>


<h5 class="text-center">Uvoz podataka korištenjem Excela</h5>

<form method="post" enctype="multipart/form-data" action="@Url.Action("ImportPartnerExcel", "Projekt")">
    <div class="mb-3">
        <label for="excelFile" class="form-label">Odaberite Excel datoteku:</label>
        <input type="file" class="form-control" id="excelFile" name="file" accept=".xlsx">
    </div>
    <button type="submit" class="btn btn-primary">Uvezi podatke</button>
</form>

@section scripts {
    <script src="~/js/pager.js" asp-append-version="true"></script>
    <script src="~/lib/htmx/htmx.min.js" asp-append-version="true"></script>

    <partial name="IncludeValidation" />
    <script>
        var importStatus = '@(TempData["imported"])';
        if (importStatus === 'True') {
            alert("Podaci su uspješno uvezeni.");
        } else if (importStatus === 'False') {
            var importError = '@(TempData["importError"])';
            alert("Greška prilikom uvoza podataka: " + importError);
        }
        document.getElementById('generatePdfButton').addEventListener('click', function () {
            // Use AJAX or other methods to call the action that generates the PDF
            fetch('@Url.Action("ProjektPDF", "Report")', {
                method: 'GET'
            }).then(response => {
                if (response.ok) {
                    return response.blob();
                } else {
                    console.error('Failed to generate PDF');
                }
            }).then(blob => {
                // Create a download link for the PDF
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'projekt.pdf';
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
            });
        });

        document.getElementById('generateExcelButton').addEventListener('click', function () {

            window.location.href = '@Url.Action("ProjektExcel", "Report")';
        });
    </script>
}

@if (TempData["used"] != null && (bool)TempData["used"])
{
    <script>
        alert("Projekt se koristi");
    </script>
}
@if (TempData["deleted"] != null && (bool)TempData["deleted"])
{
    <script>
        alert("Projekt je obrisana");
    </script>
}
@if (TempData["updated"] != null && (bool)TempData["updated"])
{
    <script>
        alert("Projekt je ažurirana");
    </script>
}
@if (TempData["created"] != null && (bool)TempData["created"])
{
    <script>
        alert("Projekt je stvorena");
    </script>
}